# Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив, заданный случайными числами
# на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Сортировка должна быть реализована в виде функции. По возможности доработайте алгоритм (сделайте его умнее).
import random


def bubble_sort(array):
    n = len(array) - 1  # показывает нам от какого элемента "хвост" уже отсортирован
    while n > 0:
        for i in range(n):  # не обязательно проходить и отсортированный "хвост"
            if array[i] < array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
        n -= 1
        # если к отсортированному хвосту примыкают несколько равных минимальных значений
        # то их можно не обходить и перейти к следующему
        for _ in range(len(array)):
            if array[n - 1] == array[n]:
                n -= 1
            else:
                break


if __name__ == '__main__':
    SIZE = 20
    MIN_ITEM = -100
    MAX_ITEM = 100
    array = [random.randint(MIN_ITEM, MAX_ITEM - 1) for _ in range(SIZE)]
    print(array)
    bubble_sort(array)
    print(array)
